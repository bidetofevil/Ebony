plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.anvil)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.firebase.crashlytics)
    alias(libs.plugins.gms.googleServices)
}

repositories {
    google()
    mavenCentral()
}

android {
    signingConfigs {
        release {
            storeFile file('/Users/mnakhimovich/keystore')
            storePassword 'Qwer1234'
            keyAlias 'firefly'
            keyPassword 'Qwer1234'
        }
    }
    namespace 'social.androiddev.firefly'
    compileSdk 33

    defaultConfig {
        applicationId "social.androiddev"
        minSdk 26
        targetSdk 33
        versionCode 7
        versionName "0.0.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.androidxComposeCompiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation(platform(libs.androidx.compose.bom))
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation platform('com.google.firebase:firebase-bom:31.2.3')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    kapt(libs.dagger.compiler)

    debugImplementation(libs.androidx.compose.ui.test.manifest)
    debugImplementation(libs.androidx.compose.ui.tooling)
    implementation(libs.androidx.compose.ui.tooling.preview)
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.foundation)
    implementation(libs.me.saket.swipe)
    implementation(libs.androidx.activity.activity.compose)
    implementation(libs.androidx.compose.material3)
    implementation(libs.androidx.core.core.ktx)
    implementation(libs.androidx.datastore)
    implementation(libs.androidx.lifecycle.lifecycle.runtime.ktx)
    implementation(libs.com.google.dagger)
    implementation(libs.com.squareup.retrofit2.retrofit)
    implementation(libs.de.charlex.compose.revealswipe)
    implementation(libs.coil.compose)
    implementation(libs.com.jakewharton.retrofit)
    implementation(libs.com.squareup.okhttp3.logging.interceptor)
    implementation(libs.com.squareup.okhttp3.okhttp)
    implementation(libs.kotlinx.serialization.json)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.browser)
    implementation(libs.store.cache)
    implementation(libs.store.jvm)
    implementation(libs.androidx.paging.compose)
    implementation(libs.retained.compose)
    implementation(libs.androidx.nav.compose)
    implementation "com.google.accompanist:accompanist-pager:0.28.0"

    // If using indicators, also depend on
    implementation "com.google.accompanist:accompanist-pager-indicators:0.28.0"
    api(libs.atomicfu)
    implementation("app.cash.sqldelight:android-driver:2.0.0-alpha05")
//    implementation "com.airbnb.android:lottie-compose:6.0.0"

    testImplementation(libs.coroutines.test)
    testImplementation(libs.junit)
    testImplementation(libs.assertj)

    androidTestImplementation(libs.coroutines.test)
    androidTestImplementation(libs.junit)
    androidTestImplementation(libs.assertj)
//    androidTestImplementation(libs.androidx.compose.ui.test.junit4)
    androidTestImplementation(libs.espresso)
    androidTestImplementation(libs.junit.ext)
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.4.0"
    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5")

    def  room_version = "2.5.0"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    // optional - Test helpers
    testImplementation("androidx.room:room-testing:$room_version")

    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:$room_version")
    implementation "com.google.accompanist:accompanist-placeholder-material3:0.29.1-alpha"
    implementation("androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha07")
    implementation("io.coil-kt:coil-gif:2.2.2")
    implementation("io.coil-kt:coil-video:2.2.2")
    implementation 'com.google.android.exoplayer:exoplayer:2.18.4'
    implementation "com.google.accompanist:accompanist-navigation-animation:0.28.0"
    implementation "com.google.accompanist:accompanist-navigation-material:0.28.0"
}



